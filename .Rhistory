long_lat[4,2] <- -97.73965108465788
long_lat[4,2] <- 30.269806126148378
long_lat[4,3] <- -97.73965108465788
zip_data <- zip_data %>% left_join(., long_lat, by = "zipcode")
# Contact data
zip_data <- readxl::read_xlsx(here::here("data", "community_resources_map_data.xlsx"), sheet = "program_info") %>%
select(program, address) %>%
tidyr::separate_wider_delim(address, delim = ",", names = c("street_address", "city", "state", "zipcode")) %>%
mutate(
zipcode = gsub(" ", "", zipcode, fixed = TRUE)
)
# Generate logitude and latitude data for each zipcode
long_lat <- geocode_zip(zip_data$zipcode)
# Manually add missing long and lat values for zipcode 78767
long_lat[4,2] <- 30.269806126148378
long_lat[4,3] <- -97.73965108465788
# Combine the long lat data with the rest of the address data
zip_data <- zip_data %>% left_join(., long_lat, by = "zipcode")
# Contact data
add_data <- readxl::read_xlsx(here::here("data", "community_resources_map_data.xlsx"), sheet = "program_info") %>%
select(program, address) %>%
tidyr::separate_wider_delim(address, delim = ",", names = c("street_address", "city", "state", "zipcode")) %>%
mutate(
zipcode = gsub(" ", "", zipcode, fixed = TRUE)
)
# Generate logitude and latitude data for each zipcode
long_lat <- geocode_zip(add_data$zipcode)
# Manually add missing long and lat values for zipcode 78767
long_lat[4,2] <- 30.269806126148378
long_lat[4,3] <- -97.73965108465788
# Combine the long lat data with the rest of the address data
add_data <- add_data %>% left_join(., long_lat, by = "zipcode")
View(add_data)
cat_data_f <- cat_data %>%
rowwise() %>%
mutate(
# Format main categories
f_main_category = paste(strwrap(main_category, 16), collapse="\n"),
# f_main_category = factor(f_main_category,
#                          levels = cat),
sub_category = gsub("\r\n", "", sub_category)
) %>% left_join(add_data, by = "program")
shared_data <- cat_data_f %>% filter(main_category == "Behavioral Health Services") %>% select(program, agency, main_category, sub_category, street_address, city, state, zipcode) %>% group_by(sub_category) %>%
mutate(
sub_category = gsub("\r\n", "", sub_category),
sub_category = factor(sub_category,
levels = rev(mc_levels_list[["Behavioral Health Services"]]))
)
View(cat_data_f)
View(shared_data)
shared_data <- cat_data_f %>% filter(main_category == "Behavioral Health Services") %>% select(program, agency, main_category, sub_category, street_address, city, state, zipcode) %>% group_by(sub_category) %>%
mutate(
sub_category = gsub("\r\n", "", sub_category),
sub_category = factor(sub_category,
levels = rev(mc_levels_list[["Behavioral Health Services"]]))
)
View(cat_data_f)
shared_data <- cat_data_f %>% filter(main_category == "Behavioral Health Services") %>% select(program, agency, main_category, sub_category, street_address, city, state, zipcode, long, lat) %>% group_by(sub_category) %>%
mutate(
sub_category = gsub("\r\n", "", sub_category),
sub_category = factor(sub_category,
levels = rev(mc_levels_list[["Behavioral Health Services"]]))
)
shared_data <- cat_data_f %>% filter(main_category == "Behavioral Health Services") %>% select(program, agency, main_category, sub_category, street_address, city, state, zipcode, lng, lat) %>% group_by(sub_category) %>%
mutate(
sub_category = gsub("\r\n", "", sub_category),
sub_category = factor(sub_category,
levels = rev(mc_levels_list[["Behavioral Health Services"]]))
)
test <- shared_data %>%
mutate(
sub_cat_text = factor(sub_category, levels = rev(mc_levels_list[["Behavioral Health Services"]]),
labels = rev(text_labels))
)
View(shared_data_test)
View(test)
# For crosstalk
shared_data_test <- SharedData$new(test, key = ~program)
#| title: Chart
cols <- c("#003f5c",  "#2c4875", "#58508d", "#8a508f", "#bc5090", "#de5a79", "#ff6361", "#ff8531", "#ffa600")
r <- 12
bhs <- ggplot(shared_data_test, aes(y = sub_category,
text = paste(sub_cat_text)
)) +
geom_bar(fill = "#003f5c") +
geom_text(aes(label = ..count..), stat = "count",
nudge_x = -0.2, color = "white") +
scale_fill_discrete(drop=FALSE) +
scale_y_discrete(drop = FALSE) + theme_classic() +
theme(axis.ticks.x = element_blank(),
axis.line = element_blank())
ggplotly(bhs, tooltip = c("text")) %>%
layout(hoverlabel = list(align="left",
bgcolor = "#003f5c"),
title = "Behavioral Health Services",
margin = list(t = 50),
xaxis = list(showticklabels = FALSE,
title = FALSE,
range = list(0, r),
fixedrange = TRUE
),
yaxis = list(showticklabels = TRUE,
title = FALSE,
fixedrange = TRUE),
showlegend = F) %>%
style(hoverinfo = 'none', traces = c(1),
textposition = "none") %>%
highlight(on = "plotly_click", off = "plotly_doubleclick")
austin <- c(-97.73996, 30.26734)
m <- leaflet() %>% setView(lng = austin[1], lat = austin[2], zoom = 10)
m %>% addTiles()
# For crosstalk
shared_data_test <- SharedData$new(test, key = ~program)
shared_data_test %>% leaflet()
austin <- c(-97.73996, 30.26734)
m <- shared_data_test %>% leaflet() %>% setView(lng = austin[1], lat = austin[2], zoom = 10)
m %>% addTiles()
library(tigris)
char_zips <- zctas(cb = TRUE, starts_with = "282")
char_zips <- zctas(cb = FALSE, starts_with = "282")
austin <- c(-97.73996, 30.26734)
m <- shared_data_test %>% leaflet() %>% setView(lng = austin[1], lat = austin[2], zoom = 10)
m %>% addTiles() %>%
addmarkers(~lng, ~lat, popup = ~as.character(zipcode), label = ~as.character(zipcode))
austin <- c(-97.73996, 30.26734)
m <- shared_data_test %>% leaflet() %>% setView(lng = austin[1], lat = austin[2], zoom = 10)
m %>% addTiles() %>%
addMarkers(~lng, ~lat, popup = ~as.character(zipcode), label = ~as.character(zipcode))
#| title: Map
austin <- c(-97.73996, 30.26734)
m <- shared_data_test %>% leaflet() %>% setView(lng = austin[1], lat = austin[2], zoom = 10)
m %>% addTiles(urlTemplate = 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png") %>%
addMarkers(~lng, ~lat, popup = ~as.character(zipcode), label = ~as.character(zipcode))
#| title: Map
austin <- c(-97.73996, 30.26734)
m <- shared_data_test %>% leaflet() %>% setView(lng = austin[1], lat = austin[2], zoom = 10)
m %>% addTiles(urlTemplate = 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png') %>%
addMarkers(~lng, ~lat, popup = ~as.character(zipcode), label = ~as.character(zipcode))
#| title: Map
austin <- c(-97.73996, 30.26734)
m <- shared_data_test %>% leaflet() %>% setView(lng = austin[1], lat = austin[2], zoom = 10)
m %>% addTiles(urlTemplate = 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png') %>%
addMarkers(~lng, ~lat, popup = ~as.character(zipcode), label = ~as.character(zipcode))
#| title: Map
austin <- c(-97.73996, 30.26734)
m <- shared_data_test %>% leaflet() %>% setView(lng = austin[1], lat = austin[2], zoom = 10)
m %>% addTiles(urlTemplate = 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png') %>%
addMarkers(~lng, ~lat, popup = ~as.character(zipcode), label = ~as.character(zipcode))
#| title: Map
austin <- c(-97.73996, 30.26734)
m <- shared_data_test %>% leaflet() %>% setView(lng = austin[1], lat = austin[2], zoom = 10)
m %>% addTiles(urlTemplate = 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png') %>%
addMarkers(~lng, ~lat, popup = ~as.character(zipcode), label = ~as.character(zipcode))
#| title: Map
austin <- c(-97.73996, 30.26734)
m <- shared_data_test %>% leaflet() %>% setView(lng = austin[1], lat = austin[2], zoom = 10)
m %>% addProviderTiles(providers$CartoDB.Positron) %>%
addMarkers(~lng, ~lat, popup = ~as.character(zipcode), label = ~as.character(zipcode))
install.packages(c("backports", "bitops", "brio", "broom", "bslib", "cachem", "callr", "checkmate", "cli", "clock", "colorspace", "commonmark", "crayon", "crul", "curl", "data.table", "DBI", "dbplyr", "digest", "downlit", "downloadthis", "dplyr", "DT", "evaluate", "FactoClass", "fansi", "farver", "fastmap", "flextable", "fs", "future", "future.apply", "gam", "gbm", "gdtools", "gert", "ggiraph", "ggplot2", "globals", "glue", "gtable", "hardhat", "highr", "Hmisc", "htmlTable", "htmltools", "httpuv", "httr2", "igraph", "ipred", "keras", "knitr", "lava", "lavaan", "leaps", "lme4", "magick", "markdown", "matrixStats", "minqa", "misty", "munsell", "nloptr", "odbc", "officer", "openssl", "openxlsx", "parallelly", "pbkrtest", "pixmap", "pkgbuild", "pkgdown", "pkgload", "pls", "processx", "prodlim", "promises", "ps", "quantreg", "ragg", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "recipes", "reprex", "reticulate", "rlang", "rmarkdown", "roxygen2", "rstudioapi", "RUnit", "rvest", "s2", "sass", "sf", "shape", "shiny", "sp", "SparseM", "stringi", "styler", "systemfonts", "targets", "testthat", "textshaping", "tfruns", "tidyselect", "tinytex", "ucminf", "usethis", "usmap", "usmapdata", "utf8", "uuid", "vctrs", "websocket", "withr", "wk", "writexl", "xfun", "yaml"))
install.packages(c("bslib", "dplyr", "ggiraph", "ggplot2", "htmltools", "igraph", "knitr", "ragg", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "rlang", "rstudioapi", "RUnit", "shiny", "yaml"))
# Libraries
library(plotly)
# library(htmlwidgets) # to use the 'onRender' function
library(here)
library(dplyr)
library(ggplot2)
library(DT)
library(crosstalk)
library(forcats, include.only = c("fct_reorder"))
library(readxl)
library(tidyr)
library(leaflet)
library(zipcodeR)
source(here::here("R", "month_name_year.R"))
cat_data <- readxl::read_xlsx(here::here("data", "community_resources_map_data.xlsx"), sheet = "program_categories")
# Contact data
add_data <- readxl::read_xlsx(here::here("data", "community_resources_map_data.xlsx"), sheet = "program_info") %>%
select(program, address) %>%
tidyr::separate_wider_delim(address, delim = ",", names = c("street_address", "city", "state", "zipcode")) %>%
mutate(
zipcode = gsub(" ", "", zipcode, fixed = TRUE)
)
# Generate logitude and latitude data for each zipcode
long_lat <- geocode_zip(add_data$zipcode)
# Manually add missing long and lat values for zipcode 78767
long_lat[4,2] <- 30.269806126148378
long_lat[4,3] <- -97.73965108465788
# Combine the long lat data with the rest of the address data
add_data <- add_data %>% left_join(., long_lat, by = "zipcode")
# Create factor levels for main categories
categories <- sort(c("Behavioral Health Services", "Substance Use Treatment", "Housing Assistance", "Healthcare Services",
"Community  Policing Initiatives",
"Legal Aid & Advocacy", "Legal Diversion Supports", "Reentry  Support", "Community Engagement & Awareness"))
cat <- c()
for(i in categories){
cat_item <- paste(strwrap(i, 16), collapse="\n")
cat <- append(cat, cat_item)
}
cat_data_f <- cat_data %>%
rowwise() %>%
mutate(
# Format main categories
f_main_category = paste(strwrap(main_category, 16), collapse="\n"),
# f_main_category = factor(f_main_category,
#                          levels = cat),
sub_category = gsub("\r\n", "", sub_category)
) %>% left_join(add_data, by = "program")
all_cats <- read.csv(here::here("data", "all_categories.csv")) %>%
mutate(
main_category = gsub("\n", "", main_category)
)
main_cats <- all_cats %>% select(main_category) %>% distinct() %>% as.vector() %>% unlist()
mc_levels_list <- list()
for(mc in main_cats){
dat <- cat_data_f %>% filter(main_category == mc) %>%
select(sub_category) %>%
add_count(sub_category, sort = TRUE) %>% select(sub_category) %>% distinct() %>%
as.vector() %>% unlist()
cats <- all_cats %>% filter(main_category == mc) %>%
select(sub_category) %>%
as.vector() %>% unlist()
ml <- list(union(dat, cats))
mc_levels_list <- append(mc_levels_list, ml)
}
names(mc_levels_list) <- main_cats
plot_data <- cat_data_f %>% filter(main_category == "Behavioral Health Services") %>% select(program, main_category, sub_category) %>% group_by(sub_category) %>%
mutate(
sub_category = factor(sub_category,
levels = mc_levels_list[["Behavioral Health Services"]])
)
plot_data <- table(plot_data$sub_category) %>% as.data.frame() %>% rename(sub_category = "Var1",
sub_cat_count = "Freq")
r <- max(plot_data["sub_cat_count"]) + 7
plot_data %>%
plot_ly(x = ~sub_cat_count,
y = ~sub_category,
type = "bar",
# color = ~colors,
name="",
text = ~sub_cat_count, textposition = "outside",
textfont = list(color = 'black', size = 13),
hovertemplate = paste("<br>Need sub-category: %{y} <br>Programs: %{x}")
) %>%
# Layout
layout(title = "Behavioral Health Services",
xaxis = list(zerolinecolor = 'transparent',
zerolinewidth = 2,
gridcolor = 'ffff',
showgrid = F,
showticklabels = FALSE,
title = FALSE,
range = list(0, r),
fixedrange = TRUE
),
yaxis = list(
categoryorder = "total ascending",
zerolinecolor = 'transparent',
zerolinewidth = 2,
gridcolor = 'ffff',
showgrid = F,
showticklabels = TRUE,
title = FALSE,
fixedrange = TRUE),
showlegend = F
)
shared_data <- cat_data_f %>% filter(main_category == "Behavioral Health Services") %>% select(program, agency, main_category, sub_category, street_address, city, state, zipcode, lng, lat) %>% group_by(sub_category) %>%
mutate(
sub_category = gsub("\r\n", "", sub_category),
sub_category = factor(sub_category,
levels = rev(mc_levels_list[["Behavioral Health Services"]]))
)
text_labels <- table(shared_data$sub_category) %>% as.data.frame() %>% rename(
sub_category = "Var1",
count = Freq
) %>% arrange(sub_category) %>%
arrange(desc(count)) %>%
mutate(
text_label = paste("Need sub-category: ", sub_category, "\nProgram: ", count)
)
text_labels <- text_labels[match(mc_levels_list[["Behavioral Health Services"]], text_labels$sub_category),] %>%
select(text_label) %>%
as.vector() %>% unlist() %>% unname()
test <- shared_data %>%
mutate(
sub_cat_text = factor(sub_category, levels = rev(mc_levels_list[["Behavioral Health Services"]]),
labels = rev(text_labels))
)
# For crosstalk
shared_data_test <- SharedData$new(test, key = ~program)
#| title: Chart
cols <- c("#003f5c",  "#2c4875", "#58508d", "#8a508f", "#bc5090", "#de5a79", "#ff6361", "#ff8531", "#ffa600")
r <- 12
bhs <- ggplot(shared_data_test, aes(y = sub_category,
text = paste(sub_cat_text)
)) +
geom_bar(fill = "#003f5c") +
geom_text(aes(label = ..count..), stat = "count",
nudge_x = -0.2, color = "white") +
scale_fill_discrete(drop=FALSE) +
scale_y_discrete(drop = FALSE) + theme_classic() +
theme(axis.ticks.x = element_blank(),
axis.line = element_blank())
ggplotly(bhs, tooltip = c("text")) %>%
layout(hoverlabel = list(align="left",
bgcolor = "#003f5c"),
title = "Behavioral Health Services",
margin = list(t = 50),
xaxis = list(showticklabels = FALSE,
title = FALSE,
range = list(0, r),
fixedrange = TRUE
),
yaxis = list(showticklabels = TRUE,
title = FALSE,
fixedrange = TRUE),
showlegend = F) %>%
style(hoverinfo = 'none', traces = c(1),
textposition = "none") %>%
highlight(on = "plotly_click", off = "plotly_doubleclick")
#| title: Map
austin <- c(-97.73996, 30.26734)
m <- shared_data_test %>% leaflet() %>% setView(lng = austin[1], lat = austin[2], zoom = 10)
m %>% addTiles(urlTemplate = 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png') %>%
addMarkers(~lng, ~lat, popup = ~as.character(zipcode), label = ~as.character(zipcode))
#| title: Data
dt_table <- shared_data_test %>%
datatable(
colnames = c("Program", "Agency",  "Need Category", "Sub Category", "Street Adress", "City", "State", "Zipcode", "Text"),
extensions = "Buttons",
options = list(
columnDefs = list(list(visible = FALSE, targets = 9)),
buttons = c("csv", "excel"),
text = "Download",
# paging = TRUE,
# lengthMenu = c(5, 10, 25),
# pageLength = 10,
dom = "Bfrtip",
scrollX = TRUE
)
dt_table
#| title: Map
austin <- c(-97.73996, 30.26734)
m <- shared_data_test %>% leaflet() %>% setView(lng = austin[1], lat = austin[2], zoom = 10)
m %>% addTiles(urlTemplate = 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png') %>%
addMarkers(~lng, ~lat, popup = ~as.character(zipcode), label = ~as.character(zipcode))
#| title: Chart
cols <- c("#003f5c",  "#2c4875", "#58508d", "#8a508f", "#bc5090", "#de5a79", "#ff6361", "#ff8531", "#ffa600")
r <- 12
bhs <- ggplot(shared_data_test, aes(y = sub_category,
text = paste(sub_cat_text)
)) +
geom_bar(fill = "#003f5c") +
geom_text(aes(label = ..count..), stat = "count",
nudge_x = -0.2, color = "white") +
scale_fill_discrete(drop=FALSE) +
scale_y_discrete(drop = FALSE) + theme_classic() +
theme(axis.ticks.x = element_blank(),
axis.line = element_blank())
ggplotly(bhs, tooltip = c("text")) %>%
layout(hoverlabel = list(align="left",
bgcolor = "#003f5c"),
title = "Behavioral Health Services",
margin = list(t = 50),
xaxis = list(showticklabels = FALSE,
title = FALSE,
range = list(0, r),
fixedrange = TRUE
),
yaxis = list(showticklabels = TRUE,
title = FALSE,
fixedrange = TRUE),
showlegend = F) %>%
style(hoverinfo = 'none', traces = c(1),
textposition = "none") %>%
highlight(on = "plotly_click", off = "plotly_doubleclick")
library(tidyverse)
library(ggiraph)
library(showtext)
library(tidyverse)
library(ggiraph)
install.packages("showtext")
library(showtext)
library(sf)
library(glue)
library(leaflet)
library(tidytext)
library(tidyverse)
library(ggiraph)
library(showtext)
library(sf)
library(glue)
library(leaflet)
install.packages("tidytext")
library(tidytext)
library(ggtext)
library(tidyverse)
library(ggiraph)
library(showtext)
library(sf)
library(glue)
library(leaflet)
library(tidytext)
install.packages("ggtext")
library(ggtext)
library(scales)
font_add_google(name = "Merriweather", family = "Merriweather")
font <- "Merriweather"
showtext_auto()
showtext_opts(dpi = 320)
theme_set(theme_minimal(base_family = font,
base_size = 14))
source("function/graph_function.r")
quarto render
#| title: Map
austin <- c(-97.73996, 30.26734)
leaflet(test) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addMarkers(~lng, ~lat, popup = ~as.character(zipcode), label = ~as.character(zipcode))
# Libraries
library(here)
library(dplyr)
library(ggplot2)
library(DT)
library(forcats, include.only = c("fct_reorder"))
library(readxl)
library(tidyr)
library(leaflet)
library(zipcodeR)
source(here::here("R", "month_name_year.R"))
cat_data <- readxl::read_xlsx(here::here("data", "community_resources_map_data.xlsx"), sheet = "program_categories")
# Contact data
add_data <- readxl::read_xlsx(here::here("data", "community_resources_map_data.xlsx"), sheet = "program_info") %>%
select(program, address) %>%
tidyr::separate_wider_delim(address, delim = ",", names = c("street_address", "city", "state", "zipcode")) %>%
mutate(
zipcode = gsub(" ", "", zipcode, fixed = TRUE)
)
# Generate logitude and latitude data for each zipcode
long_lat <- geocode_zip(add_data$zipcode)
# Manually add missing long and lat values for zipcode 78767
long_lat[4,2] <- 30.269806126148378
long_lat[4,3] <- -97.73965108465788
# Combine the long lat data with the rest of the address data
add_data <- add_data %>% left_join(., long_lat, by = "zipcode")
# Create factor levels for main categories
categories <- sort(c("Behavioral Health Services", "Substance Use Treatment", "Housing Assistance", "Healthcare Services",
"Community  Policing Initiatives",
"Legal Aid & Advocacy", "Legal Diversion Supports", "Reentry  Support", "Community Engagement & Awareness"))
cat <- c()
for(i in categories){
cat_item <- paste(strwrap(i, 16), collapse="\n")
cat <- append(cat, cat_item)
}
cat_data_f <- cat_data %>%
rowwise() %>%
mutate(
# Format main categories
f_main_category = paste(strwrap(main_category, 16), collapse="\n"),
# f_main_category = factor(f_main_category,
#                          levels = cat),
sub_category = gsub("\r\n", "", sub_category)
) %>% left_join(add_data, by = "program")
all_cats <- read.csv(here::here("data", "all_categories.csv")) %>%
mutate(
main_category = gsub("\n", "", main_category)
)
main_cats <- all_cats %>% select(main_category) %>% distinct() %>% as.vector() %>% unlist()
mc_levels_list <- list()
for(mc in main_cats){
dat <- cat_data_f %>% filter(main_category == mc) %>%
select(sub_category) %>%
add_count(sub_category, sort = TRUE) %>% select(sub_category) %>% distinct() %>%
as.vector() %>% unlist()
cats <- all_cats %>% filter(main_category == mc) %>%
select(sub_category) %>%
as.vector() %>% unlist()
ml <- list(union(dat, cats))
mc_levels_list <- append(mc_levels_list, ml)
}
names(mc_levels_list) <- main_cats
shared_data <- cat_data_f %>% filter(main_category == "Behavioral Health Services") %>% select(program, agency, main_category, sub_category, street_address, city, state, zipcode, lng, lat) %>% group_by(sub_category) %>%
mutate(
sub_category = gsub("\r\n", "", sub_category),
sub_category = factor(sub_category,
levels = rev(mc_levels_list[["Behavioral Health Services"]]))
)
text_labels <- table(shared_data$sub_category) %>% as.data.frame() %>% rename(
sub_category = "Var1",
count = Freq
) %>% arrange(sub_category) %>%
arrange(desc(count)) %>%
mutate(
text_label = paste("Need sub-category: ", sub_category, "\nProgram: ", count)
)
text_labels <- text_labels[match(mc_levels_list[["Behavioral Health Services"]], text_labels$sub_category),] %>%
select(text_label) %>%
as.vector() %>% unlist() %>% unname()
test <- shared_data %>%
mutate(
sub_cat_text = factor(sub_category, levels = rev(mc_levels_list[["Behavioral Health Services"]]),
labels = rev(text_labels))
)
#| title: Map
austin <- c(-97.73996, 30.26734)
leaflet(test) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addMarkers(~lng, ~lat, popup = ~as.character(zipcode), label = ~as.character(zipcode))
saveRDS(here("data", "test.rds"))
saveRDS(test, here("data", "test.rds"))
#| title: Map
austin <- c(-97.73996, 30.26734)
m <- shared_data_test %>% leaflet() %>% setView(lng = austin[1], lat = austin[2], zoom = 10)
