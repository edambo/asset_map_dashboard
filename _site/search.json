[
  {
    "objectID": "sections/index.html",
    "href": "sections/index.html",
    "title": "asset_map_website",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "sections/about.html",
    "href": "sections/about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "sections/asset_map_overview_visual.html",
    "href": "sections/asset_map_overview_visual.html",
    "title": "Asset Map Overview",
    "section": "",
    "text": "Purpose\nThe purpose of the code in this file is to reproduce the draft of the asset map digital display but with actual interactive qualities and mock data.\n\n\nLibraries\n\n\nWarning: package 'RCurl' was built under R version 4.3.3\n\n\nWarning: package 'plotly' was built under R version 4.3.2\n\n\nLoading required package: ggplot2\n\n\nWarning: package 'ggplot2' was built under R version 4.3.2\n\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\n\nWarning: package 'htmlwidgets' was built under R version 4.3.2\n\n\nWarning: package 'here' was built under R version 4.3.3\n\n\nhere() starts at C:/Users/ebiek/OneDrive/MPH/Travis County Internship\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\nimg &lt;- readPNG(here(\"graphics\", \"high_level_map_draft.png\"))\nplot.new() \nrasterImage(img,0,0,1,1)\n\n\n\n\n\n\n\n\ncoolors palette: https://colorkit.co/color-palette-generator/003f5c-2c4875-58508d-8a508f-bc5090-de5a79-ff6361-ff8531-ffa600/\n\n# Create data frame for map\n\nx_ax &lt;- c(550, 486, 452, 463, 516, 584, 637, 648, 614)\ny_ax &lt;- c(450, 473, 533, 600, 644, 644, 600, 533, 473)\n# categories\ncat &lt;- c(\"Behavioral\\nHealth\\nServices\", \"Substance Use\\nTreatment\", \"Housing\\nAssistance\", \"Healthcare\\nServices\", \n         \"Community\\n Policing\\nInitiatives\", \n         \"Legal Aid &\\nAdvocacy\", \"Legal Diversion\\nSupports\", \"Reentry\\n Support\", \"Community\\nEngagement &\\nAwareness\" )\n\ncols &lt;- c(\"#003f5c\",  \"#2c4875\", \"#58508d\", \"#8a508f\", \"#bc5090\", \"#de5a79\", \"#ff6361\", \"#ff8531\", \"#ffa600\")\n# Urls\nurls &lt;- c(\"http://google.com\", \"https://stackoverflow.com\", \"http://google.com\", \"https://stackoverflow.com\", \"http://google.com\",\n          \"https://stackoverflow.com\", \"http://google.com\", \"https://stackoverflow.com\", \"http://google.com\")\n\na_map &lt;- data.frame(x_ax, y_ax, cols, cat, urls)\n\n\n# Add values for circle co-ordinates and colors to the data frame\n\na_map &lt;- a_map %&gt;% \n  mutate(\n    x0 = x_ax - 18,\n    x1 = x_ax + 18,\n    y0 = y_ax - 30,\n    y1 = y_ax + 30,\n    x0_d = x0 - 0.75,\n    x1_d = x1 - 0.75,\n    y0_d = y0 - 1,\n    y1_d = y1 - 1,\n  )\n\n\n# add values for circles to list\nlarge_list &lt;- list()\nlarge_list &lt;- by(a_map, seq_len(nrow(a_map)), function(r){\n  x_0 &lt;- as.numeric(r[\"x0\"])\n  x_1 &lt;- as.numeric(r[\"x1\"])\n  y_0 &lt;- as.numeric(r[\"y0\"])\n  y_1 &lt;- as.numeric(r[\"y1\"])\n  co &lt;- as.character(r[\"cols\"])\n  \ns_list &lt;- list(type = 'circle',\n               xref = 'x', x0 = x_0, x1 = x_1,\n               yref = 'y', y0 = y_0, y1 = y_1,\n               fillcolor = co, line = list(color = co),\n               opacity = 1,\n               layer=\"below\")\nlarge_list &lt;- append(large_list, s_list)\n\n}\n  )\n\nshape_list &lt;- unname(large_list)\n\n\n# Add drop shadow\n# drop_shadow_list &lt;- list()\n# \n# drop_shadow_list &lt;- by(a_map, seq_len(nrow(a_map)), function(r){\n#   x_0_d &lt;- as.numeric(r[\"x0_d\"])\n#   x_1_d &lt;- as.numeric(r[\"x1_d\"])\n#   y_0_d &lt;- as.numeric(r[\"y0_d\"])\n#   y_1_d &lt;- as.numeric(r[\"y1_d\"])\n#   co &lt;- as.character(r[\"cols\"])\n#   \n# s_list &lt;- list(type = 'circle',\n#                xref = 'x', x0 = x_0_d, x1 = x_1_d,\n#                yref = 'y', y0 = y_0_d, y1 = y_1_d,\n#                fillcolor = co, line = list(color = co),\n#                opacity = 0.50,\n#                layer=\"below\")\n# drop_shadow_list &lt;- append(drop_shadow_list, s_list)\n# \n# }\n#   )\n# \n# drop_shadow_list &lt;- unname(drop_shadow_list)\n\n\n# shape_list &lt;- list()\n# for(i in drop_shadow_list){\n#   shape_list &lt;- append(large_list, drop_shadow_list)\n# }\n\n\n# Load background image\nback_img &lt;- here(\"graphics\", \"asset_map_bg.png\")\n\nimg_txt &lt;- RCurl::base64Encode(readBin(back_img, \"raw\", file.info(back_img)[1, \"size\"]), \"txt\")\n\nhttps://stackoverflow.com/questions/56084819/open-link-on-datapoint-click-with-plotly-in-r-shiny\n\nurls &lt;- c(\"http://google.com\", \"https://stackoverflow.com\")\n\np &lt;- a_map %&gt;% highlight_key(~x_ax) %&gt;% plot_ly(type = \"scatter\", mode = \"markers+text\",\n             text = ~cat, textposition = \"middle center\",\n              marker = list(\n                color = 'black',\n                symbol = \"circle\",\n                size = 120,\n                opacity = 0.08),\n             textfont = list(color = '#fff', size = 13),\n             x = ~ x_ax, y = ~y_ax, \n             customdata = ~ urls,\n             width = 1050,\n             height = 675) %&gt;%\n  # Remove hover info\n  style(hoverinfo = 'none') %&gt;%\n  \n  # Layout\n  layout(xaxis = list(zerolinecolor = '#ffff',\n                      zerolinewidth = 2,\n                      gridcolor = 'ffff',\n                      range = list(415, 710), showgrid = F,\n                      showticklabels = FALSE,\n                      title = FALSE,\n                      fixedrange = TRUE\n                      ),\n         yaxis = list(\n                     zerolinecolor = '#ffff',\n                     zerolinewidth = 2,\n                     gridcolor = 'ffff',\n                     range = list(400, 700), showgrid = F,\n                     showticklabels = FALSE,\n                     title = FALSE,\n                     fixedrange = TRUE),\n         # add shapes\n         shapes = shape_list,\n         # Add background\n        images = list(\n          list(\n            source =  paste('data:image/png;base64', img_txt, sep=','),\n            xref = \"x\",\n            yref = \"y\",\n            x = 400,\n            y = 700,\n            sizex = 295,\n            sizey = 300,\n            sizing = \"stretch\",\n            opacity = 1,\n            layer = \"below\"\n      )\n    ),\n    showlegend = F\n         )%&gt;%\n highlight(on = 'plotly_hover', off = NULL, \n           opacityDim = getOption(\"opacityDim\", 1),\n           color = \"black\",\n           showlegend = FALSE,\n           selected = attrs_selected(mode = \"markers\", opacity = 0.7)\n           ) \n\nWarning: The following arguments are not supported:\nshowlegend\nArguments such as: hoverinfo and showInLegend \nhave been replaced by selected and other\n\n# Disable modebar\np &lt;- config(p, displayModeBar = FALSE)\n\njs &lt;- \"\nfunction(el, x) {\n  el.on('plotly_click', function(d) {\n    var point = d.points[0];\n    var url = point.data.customdata[point.pointIndex];\n    window.open(url, target = '_self');\n  })\n}\"\n\np %&gt;% onRender(js)\n\n\n\n\n\nPlay with text size, color etc: https://plotly.com/r/text-and-annotations/\nCo-ordinates for nonagon: https://www.mathopenref.com/coordpolycalc.html\nIf not, consider image maps: https://www.w3schools.com/html/html_images_imagemap.asp\nCheck to see if we can use the buttons instead of points as input: https://plotly-r.com/supplying-custom-data.html#:~:text=The%20customdata%20attribute%20can%20hold%20any%20R%20object"
  }
]