{"title":"Asset Map Overview","markdown":{"yaml":{"title":"Asset Map Overview","format":"html","fig-responsive":false},"headingText":"Purpose","containsRefs":false,"markdown":"\n\nThe purpose of the code in this file is to reproduce the draft of the asset map digital display but with actual interactive qualities and mock data.\n\n# Libraries\n```{r, echo=FALSE}\nlibrary(png) # read png image\nlibrary(RCurl) # read png files\nlibrary(plotly)\nlibrary(htmlwidgets) # to use the 'onRender' function\nlibrary(here)\nlibrary(dplyr)\nlibrary(ggplot2)\n\n```\n\n```{r}\nimg <- readPNG(here(\"graphics\", \"high_level_map_draft.png\"))\nplot.new() \nrasterImage(img,0,0,1,1)\n\n```\n\n\ncoolors palette:\n<https://colorkit.co/color-palette-generator/003f5c-2c4875-58508d-8a508f-bc5090-de5a79-ff6361-ff8531-ffa600/>\n```{r}\n# Create data frame for map\n\nx_ax <- c(550, 486, 452, 463, 516, 584, 637, 648, 614)\ny_ax <- c(450, 473, 533, 600, 644, 644, 600, 533, 473)\n# categories\ncat <- c(\"Behavioral\\nHealth\\nServices\", \"Substance Use\\nTreatment\", \"Housing\\nAssistance\", \"Healthcare\\nServices\", \n         \"Community\\n Policing\\nInitiatives\", \n         \"Legal Aid &\\nAdvocacy\", \"Legal Diversion\\nSupports\", \"Reentry\\n Support\", \"Community\\nEngagement &\\nAwareness\" )\n\ncols <- c(\"#003f5c\",  \"#2c4875\", \"#58508d\", \"#8a508f\", \"#bc5090\", \"#de5a79\", \"#ff6361\", \"#ff8531\", \"#ffa600\")\n# Urls\nurls <- c(\"http://google.com\", \"https://stackoverflow.com\", \"http://google.com\", \"https://stackoverflow.com\", \"http://google.com\",\n          \"https://stackoverflow.com\", \"http://google.com\", \"https://stackoverflow.com\", \"http://google.com\")\n\na_map <- data.frame(x_ax, y_ax, cols, cat, urls)\n```\n\n```{r}\n# Add values for circle co-ordinates and colors to the data frame\n\na_map <- a_map %>% \n  mutate(\n    x0 = x_ax - 18,\n    x1 = x_ax + 18,\n    y0 = y_ax - 30,\n    y1 = y_ax + 30,\n    x0_d = x0 - 0.75,\n    x1_d = x1 - 0.75,\n    y0_d = y0 - 1,\n    y1_d = y1 - 1,\n  )\n\n```\n\n\n```{r}\n# add values for circles to list\nlarge_list <- list()\nlarge_list <- by(a_map, seq_len(nrow(a_map)), function(r){\n  x_0 <- as.numeric(r[\"x0\"])\n  x_1 <- as.numeric(r[\"x1\"])\n  y_0 <- as.numeric(r[\"y0\"])\n  y_1 <- as.numeric(r[\"y1\"])\n  co <- as.character(r[\"cols\"])\n  \ns_list <- list(type = 'circle',\n               xref = 'x', x0 = x_0, x1 = x_1,\n               yref = 'y', y0 = y_0, y1 = y_1,\n               fillcolor = co, line = list(color = co),\n               opacity = 1,\n               layer=\"below\")\nlarge_list <- append(large_list, s_list)\n\n}\n  )\n\nshape_list <- unname(large_list)\n```\n\n```{r}\n# Add drop shadow\n# drop_shadow_list <- list()\n# \n# drop_shadow_list <- by(a_map, seq_len(nrow(a_map)), function(r){\n#   x_0_d <- as.numeric(r[\"x0_d\"])\n#   x_1_d <- as.numeric(r[\"x1_d\"])\n#   y_0_d <- as.numeric(r[\"y0_d\"])\n#   y_1_d <- as.numeric(r[\"y1_d\"])\n#   co <- as.character(r[\"cols\"])\n#   \n# s_list <- list(type = 'circle',\n#                xref = 'x', x0 = x_0_d, x1 = x_1_d,\n#                yref = 'y', y0 = y_0_d, y1 = y_1_d,\n#                fillcolor = co, line = list(color = co),\n#                opacity = 0.50,\n#                layer=\"below\")\n# drop_shadow_list <- append(drop_shadow_list, s_list)\n# \n# }\n#   )\n# \n# drop_shadow_list <- unname(drop_shadow_list)\n```\n\n\n\n```{r}\n# shape_list <- list()\n# for(i in drop_shadow_list){\n#   shape_list <- append(large_list, drop_shadow_list)\n# }\n```\n\n```{r}\n# Load background image\nback_img <- here(\"graphics\", \"asset_map_bg.png\")\n\nimg_txt <- RCurl::base64Encode(readBin(back_img, \"raw\", file.info(back_img)[1, \"size\"]), \"txt\")\n```\n\n\n\n<https://stackoverflow.com/questions/56084819/open-link-on-datapoint-click-with-plotly-in-r-shiny>\n\n```{r, fig.align = 'center'}\nurls <- c(\"http://google.com\", \"https://stackoverflow.com\")\n\np <- a_map %>% highlight_key(~x_ax) %>% plot_ly(type = \"scatter\", mode = \"markers+text\",\n             text = ~cat, textposition = \"middle center\",\n              marker = list(\n                color = 'black',\n                symbol = \"circle\",\n                size = 120,\n                opacity = 0.08),\n             textfont = list(color = '#fff', size = 13),\n             x = ~ x_ax, y = ~y_ax, \n             customdata = ~ urls,\n             width = 1050,\n             height = 675) %>%\n  # Remove hover info\n  style(hoverinfo = 'none') %>%\n  \n  # Layout\n  layout(xaxis = list(zerolinecolor = '#ffff',\n                      zerolinewidth = 2,\n                      gridcolor = 'ffff',\n                      range = list(415, 710), showgrid = F,\n                      showticklabels = FALSE,\n                      title = FALSE,\n                      fixedrange = TRUE\n                      ),\n         yaxis = list(\n                     zerolinecolor = '#ffff',\n                     zerolinewidth = 2,\n                     gridcolor = 'ffff',\n                     range = list(400, 700), showgrid = F,\n                     showticklabels = FALSE,\n                     title = FALSE,\n                     fixedrange = TRUE),\n         # add shapes\n         shapes = shape_list,\n         # Add background\n        images = list(\n          list(\n            source =  paste('data:image/png;base64', img_txt, sep=','),\n            xref = \"x\",\n            yref = \"y\",\n            x = 400,\n            y = 700,\n            sizex = 295,\n            sizey = 300,\n            sizing = \"stretch\",\n            opacity = 1,\n            layer = \"below\"\n      )\n    ),\n    showlegend = F\n         )%>%\n highlight(on = 'plotly_hover', off = NULL, \n           opacityDim = getOption(\"opacityDim\", 1),\n           color = \"black\",\n           showlegend = FALSE,\n           selected = attrs_selected(mode = \"markers\", opacity = 0.7)\n           ) \n# Disable modebar\np <- config(p, displayModeBar = FALSE)\n\njs <- \"\nfunction(el, x) {\n  el.on('plotly_click', function(d) {\n    var point = d.points[0];\n    var url = point.data.customdata[point.pointIndex];\n    window.open(url, target = '_self');\n  })\n}\"\n\np %>% onRender(js)\n\n```\n\n\n\n\nPlay with text size, color etc:\n<https://plotly.com/r/text-and-annotations/>\n\nCo-ordinates for nonagon:\n<https://www.mathopenref.com/coordpolycalc.html>\n\n\nIf not, consider image maps:\n<https://www.w3schools.com/html/html_images_imagemap.asp>\n\n\nCheck to see if we can use the buttons instead of points as input:\n<https://plotly-r.com/supplying-custom-data.html#:~:text=The%20customdata%20attribute%20can%20hold%20any%20R%20object>\n","srcMarkdownNoYaml":"\n\n# Purpose \nThe purpose of the code in this file is to reproduce the draft of the asset map digital display but with actual interactive qualities and mock data.\n\n# Libraries\n```{r, echo=FALSE}\nlibrary(png) # read png image\nlibrary(RCurl) # read png files\nlibrary(plotly)\nlibrary(htmlwidgets) # to use the 'onRender' function\nlibrary(here)\nlibrary(dplyr)\nlibrary(ggplot2)\n\n```\n\n```{r}\nimg <- readPNG(here(\"graphics\", \"high_level_map_draft.png\"))\nplot.new() \nrasterImage(img,0,0,1,1)\n\n```\n\n\ncoolors palette:\n<https://colorkit.co/color-palette-generator/003f5c-2c4875-58508d-8a508f-bc5090-de5a79-ff6361-ff8531-ffa600/>\n```{r}\n# Create data frame for map\n\nx_ax <- c(550, 486, 452, 463, 516, 584, 637, 648, 614)\ny_ax <- c(450, 473, 533, 600, 644, 644, 600, 533, 473)\n# categories\ncat <- c(\"Behavioral\\nHealth\\nServices\", \"Substance Use\\nTreatment\", \"Housing\\nAssistance\", \"Healthcare\\nServices\", \n         \"Community\\n Policing\\nInitiatives\", \n         \"Legal Aid &\\nAdvocacy\", \"Legal Diversion\\nSupports\", \"Reentry\\n Support\", \"Community\\nEngagement &\\nAwareness\" )\n\ncols <- c(\"#003f5c\",  \"#2c4875\", \"#58508d\", \"#8a508f\", \"#bc5090\", \"#de5a79\", \"#ff6361\", \"#ff8531\", \"#ffa600\")\n# Urls\nurls <- c(\"http://google.com\", \"https://stackoverflow.com\", \"http://google.com\", \"https://stackoverflow.com\", \"http://google.com\",\n          \"https://stackoverflow.com\", \"http://google.com\", \"https://stackoverflow.com\", \"http://google.com\")\n\na_map <- data.frame(x_ax, y_ax, cols, cat, urls)\n```\n\n```{r}\n# Add values for circle co-ordinates and colors to the data frame\n\na_map <- a_map %>% \n  mutate(\n    x0 = x_ax - 18,\n    x1 = x_ax + 18,\n    y0 = y_ax - 30,\n    y1 = y_ax + 30,\n    x0_d = x0 - 0.75,\n    x1_d = x1 - 0.75,\n    y0_d = y0 - 1,\n    y1_d = y1 - 1,\n  )\n\n```\n\n\n```{r}\n# add values for circles to list\nlarge_list <- list()\nlarge_list <- by(a_map, seq_len(nrow(a_map)), function(r){\n  x_0 <- as.numeric(r[\"x0\"])\n  x_1 <- as.numeric(r[\"x1\"])\n  y_0 <- as.numeric(r[\"y0\"])\n  y_1 <- as.numeric(r[\"y1\"])\n  co <- as.character(r[\"cols\"])\n  \ns_list <- list(type = 'circle',\n               xref = 'x', x0 = x_0, x1 = x_1,\n               yref = 'y', y0 = y_0, y1 = y_1,\n               fillcolor = co, line = list(color = co),\n               opacity = 1,\n               layer=\"below\")\nlarge_list <- append(large_list, s_list)\n\n}\n  )\n\nshape_list <- unname(large_list)\n```\n\n```{r}\n# Add drop shadow\n# drop_shadow_list <- list()\n# \n# drop_shadow_list <- by(a_map, seq_len(nrow(a_map)), function(r){\n#   x_0_d <- as.numeric(r[\"x0_d\"])\n#   x_1_d <- as.numeric(r[\"x1_d\"])\n#   y_0_d <- as.numeric(r[\"y0_d\"])\n#   y_1_d <- as.numeric(r[\"y1_d\"])\n#   co <- as.character(r[\"cols\"])\n#   \n# s_list <- list(type = 'circle',\n#                xref = 'x', x0 = x_0_d, x1 = x_1_d,\n#                yref = 'y', y0 = y_0_d, y1 = y_1_d,\n#                fillcolor = co, line = list(color = co),\n#                opacity = 0.50,\n#                layer=\"below\")\n# drop_shadow_list <- append(drop_shadow_list, s_list)\n# \n# }\n#   )\n# \n# drop_shadow_list <- unname(drop_shadow_list)\n```\n\n\n\n```{r}\n# shape_list <- list()\n# for(i in drop_shadow_list){\n#   shape_list <- append(large_list, drop_shadow_list)\n# }\n```\n\n```{r}\n# Load background image\nback_img <- here(\"graphics\", \"asset_map_bg.png\")\n\nimg_txt <- RCurl::base64Encode(readBin(back_img, \"raw\", file.info(back_img)[1, \"size\"]), \"txt\")\n```\n\n\n\n<https://stackoverflow.com/questions/56084819/open-link-on-datapoint-click-with-plotly-in-r-shiny>\n\n```{r, fig.align = 'center'}\nurls <- c(\"http://google.com\", \"https://stackoverflow.com\")\n\np <- a_map %>% highlight_key(~x_ax) %>% plot_ly(type = \"scatter\", mode = \"markers+text\",\n             text = ~cat, textposition = \"middle center\",\n              marker = list(\n                color = 'black',\n                symbol = \"circle\",\n                size = 120,\n                opacity = 0.08),\n             textfont = list(color = '#fff', size = 13),\n             x = ~ x_ax, y = ~y_ax, \n             customdata = ~ urls,\n             width = 1050,\n             height = 675) %>%\n  # Remove hover info\n  style(hoverinfo = 'none') %>%\n  \n  # Layout\n  layout(xaxis = list(zerolinecolor = '#ffff',\n                      zerolinewidth = 2,\n                      gridcolor = 'ffff',\n                      range = list(415, 710), showgrid = F,\n                      showticklabels = FALSE,\n                      title = FALSE,\n                      fixedrange = TRUE\n                      ),\n         yaxis = list(\n                     zerolinecolor = '#ffff',\n                     zerolinewidth = 2,\n                     gridcolor = 'ffff',\n                     range = list(400, 700), showgrid = F,\n                     showticklabels = FALSE,\n                     title = FALSE,\n                     fixedrange = TRUE),\n         # add shapes\n         shapes = shape_list,\n         # Add background\n        images = list(\n          list(\n            source =  paste('data:image/png;base64', img_txt, sep=','),\n            xref = \"x\",\n            yref = \"y\",\n            x = 400,\n            y = 700,\n            sizex = 295,\n            sizey = 300,\n            sizing = \"stretch\",\n            opacity = 1,\n            layer = \"below\"\n      )\n    ),\n    showlegend = F\n         )%>%\n highlight(on = 'plotly_hover', off = NULL, \n           opacityDim = getOption(\"opacityDim\", 1),\n           color = \"black\",\n           showlegend = FALSE,\n           selected = attrs_selected(mode = \"markers\", opacity = 0.7)\n           ) \n# Disable modebar\np <- config(p, displayModeBar = FALSE)\n\njs <- \"\nfunction(el, x) {\n  el.on('plotly_click', function(d) {\n    var point = d.points[0];\n    var url = point.data.customdata[point.pointIndex];\n    window.open(url, target = '_self');\n  })\n}\"\n\np %>% onRender(js)\n\n```\n\n\n\n\nPlay with text size, color etc:\n<https://plotly.com/r/text-and-annotations/>\n\nCo-ordinates for nonagon:\n<https://www.mathopenref.com/coordpolycalc.html>\n\n\nIf not, consider image maps:\n<https://www.w3schools.com/html/html_images_imagemap.asp>\n\n\nCheck to see if we can use the buttons instead of points as input:\n<https://plotly-r.com/supplying-custom-data.html#:~:text=The%20customdata%20attribute%20can%20hold%20any%20R%20object>\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":false,"output-file":"asset_map_overview_visual.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.4.549","page-layout":"full","theme":["cosmo","assets/custom_styles.css"],"title":"Asset Map Overview"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}