{"title":"Libraries","markdown":{"yaml":{"format":"dashboard","orientation":"rows","scrolling":true},"headingText":"Libraries","containsRefs":false,"markdown":"\n\n<!-- # All {orientation=\"columns\" scrolling=\"true\"} -->\n\n```{r, include = FALSE}\nlibrary(plotly)\n# library(htmlwidgets) # to use the 'onRender' function\nlibrary(here)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(DT)\nlibrary(crosstalk)\nlibrary(forcats, include.only = c(\"fct_reorder\"))\nlibrary(readxl)\nlibrary(tidyr)\nlibrary(leaflet)\nlibrary(zipcodeR)\nlibrary(tigris)\nlibrary(sf)\n```\n\n```{r, include=FALSE}\nsource(here::here(\"R\", \"month_name_year.R\"))\n```\n\n<!-- Load data -->\n\n```{r, include=FALSE}\n\ncat_data <- readxl::read_xlsx(here::here(\"data\", \"community_resources_map_data.xlsx\"), sheet = \"program_categories\")\n```\n\n\n```{r, include=FALSE}\n# Contact data\nadd_data <- readxl::read_xlsx(here::here(\"data\", \"community_resources_map_data.xlsx\"), sheet = \"program_info\") %>% \n  select(program, address) %>%\n   tidyr::separate_wider_delim(address, delim = \",\", names = c(\"street_address\", \"city\", \"state\", \"zipcode\")) %>%\n  mutate(\n    zipcode = gsub(\" \", \"\", zipcode, fixed = TRUE)\n  )\n\n# Generate logitude and latitude data for each zipcode\nlong_lat <- geocode_zip(add_data$zipcode)\n\n# Manually add missing long and lat values for zipcode 78767\nlong_lat[4,2] <- 30.269806126148378 \nlong_lat[4,3] <- -97.73965108465788\n\n\n# Combine the long lat data with the rest of the address data\nadd_data <- add_data %>% left_join(., long_lat, by = \"zipcode\")\n```\n\n\n```{r, include=FALSE}\n# Get boundary shape data for the zipcodes\nadd_data <- zctas(cb = T, starts_with = \"787\", class = \"sf\", year = 2020) %>%\n  select(zipcode = starts_with(\"ZCTA\"), geometry) %>% right_join(., add_data, by = \"zipcode\" ) %>%\n  relocate(zipcode, .after = \"state\")\n```\n\n\n```{r, include=FALSE}\n# Create factor levels for main categories\ncategories <- sort(c(\"Behavioral Health Services\", \"Substance Use Treatment\", \"Housing Assistance\", \"Healthcare Services\", \n         \"Community  Policing Initiatives\", \n         \"Legal Aid & Advocacy\", \"Legal Diversion Supports\", \"Reentry  Support\", \"Community Engagement & Awareness\"))\n\ncat <- c()\nfor(i in categories){\n  cat_item <- paste(strwrap(i, 16), collapse=\"\\n\")\n  cat <- append(cat, cat_item)\n}\n```\n\n\n```{r, include=FALSE}\ncat_data_f <- cat_data %>% \n  rowwise() %>%\n  mutate(\n    # Format main categories\n    f_main_category = paste(strwrap(main_category, 16), collapse=\"\\n\"), \n    # f_main_category = factor(f_main_category,\n    #                          levels = cat),\n    sub_category = gsub(\"\\r\\n\", \"\", sub_category)\n  ) %>% \n  group_by(main_category) %>%\n  mutate(\n    count_by_main = n()\n  ) %>% relocate(count_by_main, .after = main_category) %>%\n  group_by(main_category, sub_category) %>%\n  mutate(\n    count_by_sub = n()\n  ) %>% relocate(count_by_sub, .after = sub_category) %>%\n  ungroup()\n  \ncat_data_sf <- add_data %>% left_join(., cat_data_f, by = \"program\") %>%\n  group_by(zipcode) %>%\n  mutate(\n    count_by_zip = n()\n  ) %>%\n  ungroup()\n```\n\n\n```{r, include=FALSE}\n\nall_cats <- read.csv(here::here(\"data\", \"all_categories.csv\")) %>% \n  mutate(\n    main_category = gsub(\"\\n\", \"\", main_category)\n  )\n```\n\n\n<!-- Create lists of factor levels for each main category -->\n\n```{r, include=FALSE}\nmain_cats <- all_cats %>% select(main_category) %>% distinct() %>% as.vector() %>% unlist()\n\nmc_levels_list <- list()\n\nfor(mc in main_cats){\n  dat <- cat_data_f %>% filter(main_category == mc) %>% \n  select(sub_category) %>% \n  add_count(sub_category, sort = TRUE) %>% select(sub_category) %>% distinct() %>%\n    as.vector() %>% unlist()\n  \n  cats <- all_cats %>% filter(main_category == mc) %>% \n  select(sub_category) %>%\n    as.vector() %>% unlist()\n  \n  ml <- list(union(dat, cats))\n  \n  mc_levels_list <- append(mc_levels_list, ml)\n}\n\nnames(mc_levels_list) <- main_cats\n```\n\n\n# Behavioral Health Services {orientation=\"rows\" scrolling=\"true\"}\n\n```{r, echo=FALSE}\n\nshared_data <- cat_data_sf %>% filter(main_category == \"Behavioral Health Services\") %>% select(program, agency, main_category, count_by_main, sub_category, count_by_sub, zipcode, count_by_zip, lng, lat, geometry) %>% group_by(sub_category) %>% \n  mutate(\n    sub_category = gsub(\"\\r\\n\", \"\", sub_category),\n    sub_category = factor(sub_category,\n                          levels = rev(mc_levels_list[[\"Behavioral Health Services\"]]))\n    )\n```\n\n<!-- # Create the hovertext labels -->\n\n```{r, include=FALSE}\n\ntext_labels <- table(shared_data$sub_category) %>% as.data.frame() %>% rename(\n  sub_category = \"Var1\",\n  count = Freq\n) %>% arrange(sub_category) %>%\n  arrange(desc(count)) %>%\n  \n  mutate(\n    text_label = paste(\"Need sub-category: \", sub_category, \"<br>Program: \", count) \n  )\n\ntext_labels <- text_labels[match(mc_levels_list[[\"Behavioral Health Services\"]], text_labels$sub_category),] %>% \n  select(text_label) %>%\n  as.vector() %>% unlist() %>% unname()\n```\n\n```{r, include = FALSE}\n\ntest <- shared_data %>% \n  mutate(\n    sub_cat_text = factor(sub_category, levels = rev(mc_levels_list[[\"Behavioral Health Services\"]]), \n                          labels = rev(text_labels))\n    ) %>% sf::st_as_sf()\n```\n\n\n```{r, echo=FALSE}\n# For crosstalk\nshared_data_test <- SharedData$new(test, key = ~program)\n\n```\n\n## Row \n\n### Column{.tabset}\n```{r, echo = FALSE}\n#| title: By Subcategories\ncols <- c(\"#003f5c\",  \"#2c4875\", \"#58508d\", \"#8a508f\", \"#bc5090\", \"#de5a79\", \"#ff6361\", \"#ff8531\", \"#ffa600\")\n\nr <- 12\n\nbhs <- ggplot(shared_data_test, aes(y = sub_category,\n                               text = paste(sub_cat_text)\n                               )) +\n  geom_bar(fill = \"#003f5c\") + \n  geom_text(aes(label = ..count..), stat = \"count\", \n            nudge_x = -0.2, color = \"white\") +\n  scale_fill_discrete(drop=FALSE) +\n  scale_y_discrete(drop = FALSE) + theme_classic() +\n  theme(axis.ticks.x = element_blank(),\n        axis.line = element_blank())\n\n\n\n\nggplotly(bhs, tooltip = c(\"text\")) %>%\n  layout(hoverlabel = list(align=\"left\",\n                           bgcolor = \"#003f5c\"),\n         title = \"Behavioral Health Services\",\n         margin = list(t = 50), \n         xaxis = list(showticklabels = FALSE,\n                      title = FALSE,\n                      range = list(0, r),\n                      fixedrange = TRUE\n                      ),\n         yaxis = list(showticklabels = TRUE,\n                     title = FALSE,\n                     fixedrange = TRUE),\n         showlegend = F) %>%\n  style(hoverinfo = 'none', traces = c(1),\n        textposition = \"none\") %>%\n  highlight(on = \"plotly_click\", off = \"plotly_doubleclick\")\n\n```\n\n\n\n```{r, echo = FALSE}\n#| title: By Zipcode\n\nbscols(widths = c(12),\n  list(\n    filter_select(\"zip\", \"Zipcodes\", shared_data_test, ~zipcode)\n  )\n\n)\n                \n```\n### Column\n\n```{r, echo=FALSE}\norig_data <- function(var){\n  dat <- shared_data_test$origData() %>% as.data.frame()\n  dat %>% select({{var}})\n}\n\npal <- colorNumeric(\n  palette = \"Greens\",\n  domain = c(0:max(orig_data(data(count_by_zip)))))\n\naustin <- c(-97.73996, 30.26734)\n\nm <- shared_data_test %>% leaflet() %>% setView(lng = austin[1], lat = austin[2], zoom = 10)\n\nm %>% addProviderTiles(\"CartoDB\") %>%\n  # add zip codes\n  # addPolygons(fillColor = ~pal(count_by_sub),\n  #             weight = 2,\n  #             opacity = 1,\n  #             color = \"white\",\n  #             dashArray = \"3\",\n  #             fillOpacity = 0.7,\n  #             highlight = highlightOptions(weight = 2,\n  #                                          color = \"#666\",\n  #                                          dashArray = \"\",\n  #                                          fillOpacity = 0.7,\n  #                                          bringToFront = TRUE),\n  #             label = ~zipcode) %>%\n  # add legend\n  addLegend(pal = pal, \n            values = ~count_by_zip, \n            opacity = 0.7, \n            title = \"Number of Programs\",\n            position = \"bottomright\") %>%\n  addCircleMarkers(lng = ~lng, lat = ~lat,\n                   fillOpacity = 0.7, radius = 9,\n                   fillColor = ~pal(count_by_zip),\n                   color = ~\"black\",\n                   stroke = FALSE,\n                   label = ~zipcode)\n```\n\n## Row\n\n```{r, echo = FALSE}\n#| title: Data\ndt_table <- shared_data_test %>%\n  datatable(\n    colnames = c(\"Program\", \"Agency\",  \"Need Category\", \n                 \"Count by Need category\", \"Sub Category\", \n                 \"Count by Sub-category\", \"Zipcode\", \"Count by Zipcode\", \"Lng\",\n                 \"Lat\", \"Geometry\", \"Text label\"),\n    extensions = \"Buttons\",\n    options = list(\n      columnDefs = list(list(visible = FALSE, targets = c(9,10,11,12))),\n      buttons = c(\"csv\", \"excel\"),\n      text = \"Download\",\n      # paging = TRUE,\n      # lengthMenu = c(5, 10, 25),\n      # pageLength = 10,\n      dom = \"Bfrtip\",\n      scrollX = TRUE\n    )\n  )\ndt_table\n```\n\n\n\n\n\n\n","srcMarkdownNoYaml":"\n\n<!-- # All {orientation=\"columns\" scrolling=\"true\"} -->\n\n```{r, include = FALSE}\n# Libraries\nlibrary(plotly)\n# library(htmlwidgets) # to use the 'onRender' function\nlibrary(here)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(DT)\nlibrary(crosstalk)\nlibrary(forcats, include.only = c(\"fct_reorder\"))\nlibrary(readxl)\nlibrary(tidyr)\nlibrary(leaflet)\nlibrary(zipcodeR)\nlibrary(tigris)\nlibrary(sf)\n```\n\n```{r, include=FALSE}\nsource(here::here(\"R\", \"month_name_year.R\"))\n```\n\n<!-- Load data -->\n\n```{r, include=FALSE}\n\ncat_data <- readxl::read_xlsx(here::here(\"data\", \"community_resources_map_data.xlsx\"), sheet = \"program_categories\")\n```\n\n\n```{r, include=FALSE}\n# Contact data\nadd_data <- readxl::read_xlsx(here::here(\"data\", \"community_resources_map_data.xlsx\"), sheet = \"program_info\") %>% \n  select(program, address) %>%\n   tidyr::separate_wider_delim(address, delim = \",\", names = c(\"street_address\", \"city\", \"state\", \"zipcode\")) %>%\n  mutate(\n    zipcode = gsub(\" \", \"\", zipcode, fixed = TRUE)\n  )\n\n# Generate logitude and latitude data for each zipcode\nlong_lat <- geocode_zip(add_data$zipcode)\n\n# Manually add missing long and lat values for zipcode 78767\nlong_lat[4,2] <- 30.269806126148378 \nlong_lat[4,3] <- -97.73965108465788\n\n\n# Combine the long lat data with the rest of the address data\nadd_data <- add_data %>% left_join(., long_lat, by = \"zipcode\")\n```\n\n\n```{r, include=FALSE}\n# Get boundary shape data for the zipcodes\nadd_data <- zctas(cb = T, starts_with = \"787\", class = \"sf\", year = 2020) %>%\n  select(zipcode = starts_with(\"ZCTA\"), geometry) %>% right_join(., add_data, by = \"zipcode\" ) %>%\n  relocate(zipcode, .after = \"state\")\n```\n\n\n```{r, include=FALSE}\n# Create factor levels for main categories\ncategories <- sort(c(\"Behavioral Health Services\", \"Substance Use Treatment\", \"Housing Assistance\", \"Healthcare Services\", \n         \"Community  Policing Initiatives\", \n         \"Legal Aid & Advocacy\", \"Legal Diversion Supports\", \"Reentry  Support\", \"Community Engagement & Awareness\"))\n\ncat <- c()\nfor(i in categories){\n  cat_item <- paste(strwrap(i, 16), collapse=\"\\n\")\n  cat <- append(cat, cat_item)\n}\n```\n\n\n```{r, include=FALSE}\ncat_data_f <- cat_data %>% \n  rowwise() %>%\n  mutate(\n    # Format main categories\n    f_main_category = paste(strwrap(main_category, 16), collapse=\"\\n\"), \n    # f_main_category = factor(f_main_category,\n    #                          levels = cat),\n    sub_category = gsub(\"\\r\\n\", \"\", sub_category)\n  ) %>% \n  group_by(main_category) %>%\n  mutate(\n    count_by_main = n()\n  ) %>% relocate(count_by_main, .after = main_category) %>%\n  group_by(main_category, sub_category) %>%\n  mutate(\n    count_by_sub = n()\n  ) %>% relocate(count_by_sub, .after = sub_category) %>%\n  ungroup()\n  \ncat_data_sf <- add_data %>% left_join(., cat_data_f, by = \"program\") %>%\n  group_by(zipcode) %>%\n  mutate(\n    count_by_zip = n()\n  ) %>%\n  ungroup()\n```\n\n\n```{r, include=FALSE}\n\nall_cats <- read.csv(here::here(\"data\", \"all_categories.csv\")) %>% \n  mutate(\n    main_category = gsub(\"\\n\", \"\", main_category)\n  )\n```\n\n\n<!-- Create lists of factor levels for each main category -->\n\n```{r, include=FALSE}\nmain_cats <- all_cats %>% select(main_category) %>% distinct() %>% as.vector() %>% unlist()\n\nmc_levels_list <- list()\n\nfor(mc in main_cats){\n  dat <- cat_data_f %>% filter(main_category == mc) %>% \n  select(sub_category) %>% \n  add_count(sub_category, sort = TRUE) %>% select(sub_category) %>% distinct() %>%\n    as.vector() %>% unlist()\n  \n  cats <- all_cats %>% filter(main_category == mc) %>% \n  select(sub_category) %>%\n    as.vector() %>% unlist()\n  \n  ml <- list(union(dat, cats))\n  \n  mc_levels_list <- append(mc_levels_list, ml)\n}\n\nnames(mc_levels_list) <- main_cats\n```\n\n\n# Behavioral Health Services {orientation=\"rows\" scrolling=\"true\"}\n\n```{r, echo=FALSE}\n\nshared_data <- cat_data_sf %>% filter(main_category == \"Behavioral Health Services\") %>% select(program, agency, main_category, count_by_main, sub_category, count_by_sub, zipcode, count_by_zip, lng, lat, geometry) %>% group_by(sub_category) %>% \n  mutate(\n    sub_category = gsub(\"\\r\\n\", \"\", sub_category),\n    sub_category = factor(sub_category,\n                          levels = rev(mc_levels_list[[\"Behavioral Health Services\"]]))\n    )\n```\n\n<!-- # Create the hovertext labels -->\n\n```{r, include=FALSE}\n\ntext_labels <- table(shared_data$sub_category) %>% as.data.frame() %>% rename(\n  sub_category = \"Var1\",\n  count = Freq\n) %>% arrange(sub_category) %>%\n  arrange(desc(count)) %>%\n  \n  mutate(\n    text_label = paste(\"Need sub-category: \", sub_category, \"<br>Program: \", count) \n  )\n\ntext_labels <- text_labels[match(mc_levels_list[[\"Behavioral Health Services\"]], text_labels$sub_category),] %>% \n  select(text_label) %>%\n  as.vector() %>% unlist() %>% unname()\n```\n\n```{r, include = FALSE}\n\ntest <- shared_data %>% \n  mutate(\n    sub_cat_text = factor(sub_category, levels = rev(mc_levels_list[[\"Behavioral Health Services\"]]), \n                          labels = rev(text_labels))\n    ) %>% sf::st_as_sf()\n```\n\n\n```{r, echo=FALSE}\n# For crosstalk\nshared_data_test <- SharedData$new(test, key = ~program)\n\n```\n\n## Row \n\n### Column{.tabset}\n```{r, echo = FALSE}\n#| title: By Subcategories\ncols <- c(\"#003f5c\",  \"#2c4875\", \"#58508d\", \"#8a508f\", \"#bc5090\", \"#de5a79\", \"#ff6361\", \"#ff8531\", \"#ffa600\")\n\nr <- 12\n\nbhs <- ggplot(shared_data_test, aes(y = sub_category,\n                               text = paste(sub_cat_text)\n                               )) +\n  geom_bar(fill = \"#003f5c\") + \n  geom_text(aes(label = ..count..), stat = \"count\", \n            nudge_x = -0.2, color = \"white\") +\n  scale_fill_discrete(drop=FALSE) +\n  scale_y_discrete(drop = FALSE) + theme_classic() +\n  theme(axis.ticks.x = element_blank(),\n        axis.line = element_blank())\n\n\n\n\nggplotly(bhs, tooltip = c(\"text\")) %>%\n  layout(hoverlabel = list(align=\"left\",\n                           bgcolor = \"#003f5c\"),\n         title = \"Behavioral Health Services\",\n         margin = list(t = 50), \n         xaxis = list(showticklabels = FALSE,\n                      title = FALSE,\n                      range = list(0, r),\n                      fixedrange = TRUE\n                      ),\n         yaxis = list(showticklabels = TRUE,\n                     title = FALSE,\n                     fixedrange = TRUE),\n         showlegend = F) %>%\n  style(hoverinfo = 'none', traces = c(1),\n        textposition = \"none\") %>%\n  highlight(on = \"plotly_click\", off = \"plotly_doubleclick\")\n\n```\n\n\n\n```{r, echo = FALSE}\n#| title: By Zipcode\n\nbscols(widths = c(12),\n  list(\n    filter_select(\"zip\", \"Zipcodes\", shared_data_test, ~zipcode)\n  )\n\n)\n                \n```\n### Column\n\n```{r, echo=FALSE}\norig_data <- function(var){\n  dat <- shared_data_test$origData() %>% as.data.frame()\n  dat %>% select({{var}})\n}\n\npal <- colorNumeric(\n  palette = \"Greens\",\n  domain = c(0:max(orig_data(data(count_by_zip)))))\n\naustin <- c(-97.73996, 30.26734)\n\nm <- shared_data_test %>% leaflet() %>% setView(lng = austin[1], lat = austin[2], zoom = 10)\n\nm %>% addProviderTiles(\"CartoDB\") %>%\n  # add zip codes\n  # addPolygons(fillColor = ~pal(count_by_sub),\n  #             weight = 2,\n  #             opacity = 1,\n  #             color = \"white\",\n  #             dashArray = \"3\",\n  #             fillOpacity = 0.7,\n  #             highlight = highlightOptions(weight = 2,\n  #                                          color = \"#666\",\n  #                                          dashArray = \"\",\n  #                                          fillOpacity = 0.7,\n  #                                          bringToFront = TRUE),\n  #             label = ~zipcode) %>%\n  # add legend\n  addLegend(pal = pal, \n            values = ~count_by_zip, \n            opacity = 0.7, \n            title = \"Number of Programs\",\n            position = \"bottomright\") %>%\n  addCircleMarkers(lng = ~lng, lat = ~lat,\n                   fillOpacity = 0.7, radius = 9,\n                   fillColor = ~pal(count_by_zip),\n                   color = ~\"black\",\n                   stroke = FALSE,\n                   label = ~zipcode)\n```\n\n## Row\n\n```{r, echo = FALSE}\n#| title: Data\ndt_table <- shared_data_test %>%\n  datatable(\n    colnames = c(\"Program\", \"Agency\",  \"Need Category\", \n                 \"Count by Need category\", \"Sub Category\", \n                 \"Count by Sub-category\", \"Zipcode\", \"Count by Zipcode\", \"Lng\",\n                 \"Lat\", \"Geometry\", \"Text label\"),\n    extensions = \"Buttons\",\n    options = list(\n      columnDefs = list(list(visible = FALSE, targets = c(9,10,11,12))),\n      buttons = c(\"csv\", \"excel\"),\n      text = \"Download\",\n      # paging = TRUE,\n      # lengthMenu = c(5, 10, 25),\n      # pageLength = 10,\n      dom = \"Bfrtip\",\n      scrollX = TRUE\n    )\n  )\ndt_table\n```\n\n\n\n\n\n\n"},"formats":{"dashboard":{"identifier":{"display-name":"HTML","target-format":"dashboard","base-format":"dashboard"},"execute":{"fig-width":8,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":"all","plotly-connected":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"asset_map_overview_visual.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.549","page-layout":"custom","orientation":"rows","scrolling":true},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}